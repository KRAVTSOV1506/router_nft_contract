/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PingPong, PingPongInterface } from "../PingPong";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "gatewayAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "feePayerAddress",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "CustomError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ackMessage",
        type: "string",
      },
    ],
    name: "AckFromDestination",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventIdentifier",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isSuccess",
        type: "bool",
      },
    ],
    name: "ExecutionStatus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "NewPing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "srcChainId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "PingFromSource",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "ackFromDestination",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentRequestId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gatewayContract",
    outputs: [
      {
        internalType: "contract IGateway",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destGasLimit",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "destGasPrice",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "ackGasLimit",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "ackGasPrice",
        type: "uint64",
      },
      {
        internalType: "uint128",
        name: "relayerFees",
        type: "uint128",
      },
      {
        internalType: "uint8",
        name: "ackType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isReadCall",
        type: "bool",
      },
      {
        internalType: "string",
        name: "asmAddress",
        type: "string",
      },
    ],
    name: "getRequestMetadata",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestIdentifier",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "execFlag",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "execData",
        type: "bytes",
      },
    ],
    name: "iAck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "destChainId",
        type: "string",
      },
      {
        internalType: "string",
        name: "destinationContractAddress",
        type: "string",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "requestMetadata",
        type: "bytes",
      },
    ],
    name: "iPing",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "packet",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "srcChainId",
        type: "string",
      },
    ],
    name: "iReceive",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "pingFromSource",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "feePayerAddress",
        type: "string",
      },
    ],
    name: "setDappMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gateway",
        type: "address",
      },
    ],
    name: "setGateway",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200166b3803806200166b833981016040819052620000349162000128565b600080546001600160a01b03199081163317909155600380546001600160a01b03851692168217905560405163778ae5ed60e11b815263ef15cbda906200008090849060040162000203565b602060405180830381600087803b1580156200009b57600080fd5b505af1158015620000b0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d6919062000238565b50505062000252565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000112578181015183820152602001620000f8565b8381111562000122576000848401525b50505050565b600080604083850312156200013c57600080fd5b82516001600160a01b03811681146200015457600080fd5b60208401519092506001600160401b03808211156200017257600080fd5b818501915085601f8301126200018757600080fd5b8151818111156200019c576200019c620000df565b604051601f8201601f19908116603f01168101908382118183101715620001c757620001c7620000df565b81604052828152886020848701011115620001e157600080fd5b620001f4836020830160208801620000f5565b80955050505050509250929050565b602081526000825180602084015262000224816040850160208701620000f5565b601f01601f19169190910160400192915050565b6000602082840312156200024b57600080fd5b5051919050565b61140980620002626000396000f3fe6080604052600436106100bc5760003560e01c8063a4e2128811610074578063eb0cde1d1161004e578063eb0cde1d1461023e578063edf707501461026b578063ef15cbda1461028b57600080fd5b8063a4e21288146101eb578063b147ea261461020b578063bbac7b161461021e57600080fd5b80635ae2bfdb116100a55780635ae2bfdb146101255780638da5cb5b1461017757806390646b4a146101c957600080fd5b80631aa6485a146100c15780632ee25c15146100f8575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004610c27565b6102ab565b6040516100ef929190610d29565b60405180910390f35b34801561010457600080fd5b50610118610113366004610d93565b61049e565b6040516100ef9190610e64565b34801561013157600080fd5b5060005461015e9074010000000000000000000000000000000000000000900467ffffffffffffffff1681565b60405167ffffffffffffffff90911681526020016100ef565b34801561018357600080fd5b506000546101a49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ef565b3480156101d557600080fd5b506101e96101e4366004610e7e565b6104fd565b005b3480156101f757600080fd5b506101e9610206366004610eb4565b6105c5565b6101e9610219366004610f4a565b610693565b34801561022a57600080fd5b5061011861023936600461100e565b610879565b34801561024a57600080fd5b506003546101a49073ffffffffffffffffffffffffffffffffffffffff1681565b34801561027757600080fd5b50610118610286366004611060565b61092e565b34801561029757600080fd5b506101e96102a636600461107d565b610947565b60035460009060609073ffffffffffffffffffffffffffffffffffffffff163314610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6f6e6c792067617465776179000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6000808580602001905181019061034e91906110b2565b604080516000815260208101808352815190209395509193506103739184910161113f565b6040516020818303038152906040528051906020012014156103f1576040517f8d6ea8be00000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f537472696e672073686f756c64206e6f7420626520656d707479000000000000604482015260640161032e565b80600186604051610402919061113f565b908152604080516020928190038301902067ffffffffffffffff861660009081529083522082516104399391929190910190610a74565b508167ffffffffffffffff1685604051610453919061113f565b60405180910390207fa1055657a9278650df9e2e019ea50b5c311b6560dc33e54067460bb37e6e3ccc8360405161048a9190610e64565b60405180910390a390969095509350505050565b6060600089898989898989896040516020016104c198979695949392919061115b565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00181529190529a9950505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161032e565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600080828060200190518101906105dc91906110b2565b67ffffffffffffffff82166000908152600260209081526040909120825193955091935061060d9290840190610a74565b50847fdd14d9b4c22bc2bd193966d55d26566f066347f6b2a73793ef0b1da2b6f920ff85604051610642911515815260200190565b60405180910390a28167ffffffffffffffff167fe5854bf2c0dec8c7e7e2fa28282b04c5fa0481a50fdc96661e52f6186c5a977c826040516106849190610e64565b60405180910390a25050505050565b6000805474010000000000000000000000000000000000000000900467ffffffffffffffff169060146106c583611230565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060008060149054906101000a900467ffffffffffffffff168585604051602001610718939291906112c8565b60405160208183030381529060405290506000878783604051602001610740939291906112f5565b6040516020818303038152906040529050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637bed470a3460016000604051806020016040528060008152508f8f8b8b8a6040518a63ffffffff1660e01b81526004016107cc989796959493929190611325565b6020604051808303818588803b1580156107e557600080fd5b505af11580156107f9573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061081e919061138f565b50600080546040517401000000000000000000000000000000000000000090910467ffffffffffffffff16917fc194e9c6cf7be6b60ba9729875f04d3e52bea5562f4065bbf6087e93e482584091a250505050505050505050565b815160208184018101805160018252928201948201949094209190935290915260009081526040902080546108ad906113a8565b80601f01602080910402602001604051908101604052809291908181526020018280546108d9906113a8565b80156109265780601f106108fb57610100808354040283529160200191610926565b820191906000526020600020905b81548152906001019060200180831161090957829003601f168201915b505050505081565b600260205260009081526040902080546108ad906113a8565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e657200000000000000000000000000000000000000000000604482015260640161032e565b6003546040517fef15cbda00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063ef15cbda90610a1e908490600401610e64565b602060405180830381600087803b158015610a3857600080fd5b505af1158015610a4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a70919061138f565b5050565b828054610a80906113a8565b90600052602060002090601f016020900481019282610aa25760008555610ae8565b82601f10610abb57805160ff1916838001178555610ae8565b82800160010185558215610ae8579182015b82811115610ae8578251825591602001919060010190610acd565b50610af4929150610af8565b5090565b5b80821115610af45760008155600101610af9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610b8357610b83610b0d565b604052919050565b600067ffffffffffffffff821115610ba557610ba5610b0d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112610be257600080fd5b8135610bf5610bf082610b8b565b610b3c565b818152846020838601011115610c0a57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600060608486031215610c3c57600080fd5b833567ffffffffffffffff80821115610c5457600080fd5b610c6087838801610bd1565b94506020860135915080821115610c7657600080fd5b610c8287838801610bd1565b93506040860135915080821115610c9857600080fd5b50610ca586828701610bd1565b9150509250925092565b60005b83811015610cca578181015183820152602001610cb2565b83811115610cd9576000848401525b50505050565b60008151808452610cf7816020860160208601610caf565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b67ffffffffffffffff83168152604060208201526000610d4c6040830184610cdf565b949350505050565b67ffffffffffffffff81168114610d6a57600080fd5b50565b803560ff81168114610d7e57600080fd5b919050565b80358015158114610d7e57600080fd5b600080600080600080600080610100898b031215610db057600080fd5b8835610dbb81610d54565b97506020890135610dcb81610d54565b96506040890135610ddb81610d54565b95506060890135610deb81610d54565b945060808901356fffffffffffffffffffffffffffffffff81168114610e1057600080fd5b9350610e1e60a08a01610d6d565b9250610e2c60c08a01610d83565b915060e089013567ffffffffffffffff811115610e4857600080fd5b610e548b828c01610bd1565b9150509295985092959890939650565b602081526000610e776020830184610cdf565b9392505050565b600060208284031215610e9057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e7757600080fd5b600080600060608486031215610ec957600080fd5b83359250610ed960208501610d83565b9150604084013567ffffffffffffffff811115610ef557600080fd5b610ca586828701610bd1565b60008083601f840112610f1357600080fd5b50813567ffffffffffffffff811115610f2b57600080fd5b602083019150836020828501011115610f4357600080fd5b9250929050565b6000806000806000806000806080898b031215610f6657600080fd5b883567ffffffffffffffff80821115610f7e57600080fd5b610f8a8c838d01610f01565b909a50985060208b0135915080821115610fa357600080fd5b610faf8c838d01610f01565b909850965060408b0135915080821115610fc857600080fd5b610fd48c838d01610f01565b909650945060608b0135915080821115610fed57600080fd5b50610ffa8b828c01610f01565b999c989b5096995094979396929594505050565b6000806040838503121561102157600080fd5b823567ffffffffffffffff81111561103857600080fd5b61104485828601610bd1565b925050602083013561105581610d54565b809150509250929050565b60006020828403121561107257600080fd5b8135610e7781610d54565b60006020828403121561108f57600080fd5b813567ffffffffffffffff8111156110a657600080fd5b610d4c84828501610bd1565b600080604083850312156110c557600080fd5b82516110d081610d54565b602084015190925067ffffffffffffffff8111156110ed57600080fd5b8301601f810185136110fe57600080fd5b805161110c610bf082610b8b565b81815286602083850101111561112157600080fd5b611132826020830160208601610caf565b8093505050509250929050565b60008251611151818460208701610caf565b9190910192915050565b60007fffffffffffffffff000000000000000000000000000000000000000000000000808b60c01b168352808a60c01b166008840152808960c01b166010840152808860c01b166018840152507fffffffffffffffffffffffffffffffff000000000000000000000000000000008660801b1660208301527fff000000000000000000000000000000000000000000000000000000000000008560f81b16603083015283151560f81b6031830152825161121c816032850160208701610caf565b919091016032019998505050505050505050565b600067ffffffffffffffff80831681811415611275577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6001019392505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b67ffffffffffffffff841681526040602082015260006112ec60408301848661127f565b95945050505050565b60408152600061130960408301858761127f565b828103602084015261131b8185610cdf565b9695505050505050565b88815287602082015260c06040820152600061134460c0830189610cdf565b828103606084015261135781888a61127f565b9050828103608084015261136c81868861127f565b905082810360a08401526113808185610cdf565b9b9a5050505050505050505050565b6000602082840312156113a157600080fd5b5051919050565b600181811c908216806113bc57607f821691505b602082108114156113f6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b5091905056fea164736f6c6343000809000a";

export class PingPong__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    gatewayAddress: string,
    feePayerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PingPong> {
    return super.deploy(
      gatewayAddress,
      feePayerAddress,
      overrides || {}
    ) as Promise<PingPong>;
  }
  getDeployTransaction(
    gatewayAddress: string,
    feePayerAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      gatewayAddress,
      feePayerAddress,
      overrides || {}
    );
  }
  attach(address: string): PingPong {
    return super.attach(address) as PingPong;
  }
  connect(signer: Signer): PingPong__factory {
    return super.connect(signer) as PingPong__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PingPongInterface {
    return new utils.Interface(_abi) as PingPongInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PingPong {
    return new Contract(address, _abi, signerOrProvider) as PingPong;
  }
}
